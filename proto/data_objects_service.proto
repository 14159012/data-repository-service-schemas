
syntax = "proto3";

package ga4gh_data_object;

// Import HTTP RESTful annotations
// from github.com/googleapis/googleapis
import "google/api/annotations.proto";

import "ga4gh_data_object/data_objects.proto";


//Web service to get, create, list and delete Data Objects
service DataObjectService {

  //Make a new file
  rpc CreateFile(DataObject) returns (AddDataObjectResponse) {
    option (google.api.http) = {
      post: "/ga4gh/dos/v1/file/{id}"
      body: "*"
    };
  }

  //Update or create a new version of a file (depending on the capabilities of this implementation)
  rpc UpdateFile(DataObject) returns (AddDataObjectResponse) {
    option (google.api.http) = {
      put: "/ga4gh/dos/v1/file/{id}"
      body: "*"
    };
  }

  //Get info about a file
  rpc GetFileStatus(GetDataObjectRequest) returns (FileStatusResponse) {
      option (google.api.http) = {
        get: "/ga4gh/dos/v1/file/{id}/status"
      };
  }

  //Get info about the clouds a file is on
  rpc GetFileClouds(GetDataObjectRequest) returns (DataObjectCloudsResponse) {
      option (google.api.http) = {
        get: "/ga4gh/dos/v1/file/{id}/clouds"
      };
  }

  //For a given cloud, create a signed URL for accessing this file
  rpc GetFileCloudsSignedURL(GetDataObjectCloudRequest) returns (DataObjectSignedURLResponse) {
      option (google.api.http) = {
        get: "/ga4gh/dos/v1/file/{id}/signedurl"
      };
  }

  //For a given cloud, return the native path and optionally credentials for accessing this file
  rpc GetFileCloudsNativeURL(GetDataObjectCloudRequest) returns (DataObjectNativeURLResponse) {
      option (google.api.http) = {
        get: "/ga4gh/dos/v1/file/{id}/nativeurl"
      };
  }

  //Delete a file
  rpc DeleteFile(DeleteDataObjectRequest) returns (GetDataObjectRequest) {
      option (google.api.http) = {
        delete: "/ga4gh/dos/v1/file/{id}"
      };
  }

  //List the files
  rpc ListFiles(ListDataObjectsRequest) returns (ListDataObjectsResponse) {
    option (google.api.http) = {
      get: "/ga4gh/dos/v1/file/list"
    };
  }

  //Make a new data bundle
  rpc CreateDataBundle(DataBundleObject) returns (AddDataBundleObjectResponse) {
    option (google.api.http) = {
      post: "/ga4gh/dos/v1/databundle/{id}"
      body: "*"
    };
  }

  //Create a new version of a data bundle
  rpc UpdateDataBundle(DataBundleObject) returns (AddDataBundleObjectResponse) {
    option (google.api.http) = {
      put: "/ga4gh/dos/v1/databundle/{id}"
      body: "*"
    };
  }

  //Get info about a data bundle
  rpc GetDataBundleStatus(GetDataBundleObjectRequest) returns (DataBundleStatusResponse) {
      option (google.api.http) = {
        get: "/ga4gh/dos/v1/databundle/{id}/status"
      };
  }

  //Delete a data bundle
  rpc DeleteDataBundle(DeleteDataBundleObjectRequest) returns (GetDataBundleObjectRequest) {
      option (google.api.http) = {
        delete: "/ga4gh/dos/v1/databundle/{id}"
      };
  }

  //List the data bundles
  rpc ListDataBundles(ListDataBundleObjectsRequest) returns (ListDataBundleObjectsResponse) {
    option (google.api.http) = {
      get: "/ga4gh/dos/v1/databundle/list"
    };
  }

}
